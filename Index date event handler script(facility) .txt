'''GOAL: THIS CODE ADDS THE INDEX DATE PROPERTY TO EACH DOCUMENT OBJECT AS IT IS CREATED IN THE VAULT, TO TRACK THE DATE
''' THAT THE ITEM WAS ADDED INTO M-FILES, AND NOT THE SYSTEM DATE THAT THE DOCUMENT WAS CREATED. 
'''CREATED BY : ANTOINE IBRAHIM
'''VERSION : 1.1
'''LAST MODIFIED: 12/12/2018
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

' GET THE IDS FOR THE VARIABLES THAT WE NEED 
Const Document_Object_ID = 0
Dim IndexDate_DefID : IndexDate_DefID = Vault.PropertyDefOperations.GetPropertyDefIDByAlias("Property.IndexDate.timestamp")
'	Err.Raise MFScriptCancel, DateTime.UtcNow

Set dateTime = CreateObject("WbemScripting.SWbemDateTime")    
dateTime.SetVarDate (now())

'added for Facilities 
Dim Facilities_Class_DefID : Facilities_Class_DefID = Vault.ClassOperations.GetObjectClassIDByAlias( "Class.Document.FacilitiesRecords" )
Const Class_DefID = 100
Dim CurrentClass_DefID : CurrentClass_DefID = Vault.ObjectPropertyOperations.GetProperty( ObjVer, Class_DefID ).Value.GetLookupID()

'end of added for facilities

'IF THE CURRENT OBJECT IS A DOCUMENT THEN PROCEDE WITH ADDING THE INDEX DATE TO THE METADATA CARD
IF(ObjVer.Type =Document_Object_ID) THEN
	If (CurrentClass_DefID <> Facilities_Class_DefID) Then 'added for facility
		if (IndexDate_DefID > -1)Then
	
			Dim oIndexDateTimeProperty : Set oIndexDateTimeProperty = CreatePropertyValueByDefID(IndexDate_DefID, "MFDatatypeTimestamp", dateTime.GetVarDate (false) )
			vault.ObjectPropertyOperations.SetProperty ObjVer, oIndexDateTimeProperty
		End if 
	End if 
END IF

'''''''''''''''''''''''''''''''''''''''''''''HELPER FUNCTIONS'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'CREATES A PROPERTY VALUE OBJECT AND SETS ITS VALUE, USED TO CREATE INDEX DATE PROPERTY
public Function CreatePropertyValueByDefID(PropertyDefID, propDataType, oPropertyValue)
'	GET THE PROPERTY THAT NEEDS TO BE UPDATED
	Dim oPropertyValueCondition : Set oPropertyValueCondition = CreateObject("MFilesAPI.PropertyValue")
		oPropertyValueCondition.PropertyDef = PropertyDefID
		if (propDataType ="MFDatatypeDate") then 
			if (oPropertyValue ="") then 
				oPropertyValueCondition.Value.SetValue MFDatatypeDate, Null
			else
				oPropertyValueCondition.Value.SetValue MFDatatypeDate, oPropertyValue
			end if
		end if 

		if (propDataType ="MFDatatypeText") then 
			if (oPropertyValue ="") then 
				oPropertyValueCondition.Value.SetValue MFDatatypeText, Null
			else
				oPropertyValueCondition.Value.SetValue MFDatatypeText, oPropertyValue
			end if
		end if 

		if (propDataType ="MFDatatypeTimestamp") then 
			if (oPropertyValue ="") then 
				oPropertyValueCondition.Value.SetValue MFDatatypeText, Null
			else
				oPropertyValueCondition.Value.SetValue MFDatatypeTimestamp, oPropertyValue
			end if
		end if 
	' Return the propertyValue condition.'
	Set CreatePropertyValueByDefID = oPropertyValueCondition 
End Function
